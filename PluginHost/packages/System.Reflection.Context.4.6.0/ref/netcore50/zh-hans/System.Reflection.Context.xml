<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Reflection.Context</name>
  </assembly>
  <members>
    <member name="T:System.Reflection.Context.CustomReflectionContext">
      <summary>表示自定义的反射上下文。</summary>
    </member>
    <member name="M:System.Reflection.Context.CustomReflectionContext.#ctor">
      <summary>初始化 <see cref="T:System.Reflection.Context.CustomReflectionContext" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Reflection.Context.CustomReflectionContext.#ctor(System.Reflection.ReflectionContext)">
      <summary>用指定的作为基的反射上下文初始化 <see cref="T:System.Reflection.Context.CustomReflectionContext" /> 类的新实例。</summary>
      <param name="source">作为基的反射上下文。</param>
    </member>
    <member name="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)">
      <summary>在派生类中重写时，为在此反射上下文中指定的类型提供附加属性的集合。</summary>
      <returns>指定类型的其他属性的集合。</returns>
      <param name="type">要为其添加属性的类型。</param>
    </member>
    <member name="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})">
      <summary>创建一个对象，该对象表示一个要添加到某个类型、将与 <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> 方法一起使用的属性。</summary>
      <returns>表示该属性的对象。</returns>
      <param name="propertyType">要创建的属性的类型。</param>
      <param name="name">要创建的属性的名称。</param>
      <param name="getter">表示属性的 get 访问器的对象。</param>
      <param name="setter">表示属性的 set 访问器的对象。</param>
    </member>
    <member name="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>使用指定自定义特性，创建一个对象，该对象表示要添加到某个类型、将与 <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> 方法一起使用的属性。</summary>
      <returns>表示该属性的对象。</returns>
      <param name="propertyType">要创建的属性的类型。</param>
      <param name="name">要创建的属性的名称。</param>
      <param name="getter">表示属性的 get 访问器的对象。</param>
      <param name="setter">表示属性的 set 访问器的对象。</param>
      <param name="propertyCustomAttributes">要应用于属性的自定义特性的集合。</param>
      <param name="getterCustomAttributes">要应用于属性的 get 访问器的自定义特性集合。</param>
      <param name="setterCustomAttributes">要应用于属性的 set 访问器的自定义特性集合。</param>
    </member>
    <member name="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})">
      <summary>当在派生类中重写时，为在此反射上下文中表示的指定成员提供自定义特性的列表。</summary>
      <returns>表示此反射上下文中指定的成员的自定义特性的集合。</returns>
      <param name="member">将返回其自定义特性的成员。</param>
      <param name="declaredAttributes">在其当前上下文中的成员特性的集合。</param>
    </member>
    <member name="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})">
      <summary>当在派生类中重写时，为在此反射上下文中表示的指定参数提供自定义特性列表。</summary>
      <returns>表示此反射上下文中指定的参数的自定义特性的集合。</returns>
      <param name="parameter">将返回其自定义特性的参数。</param>
      <param name="declaredAttributes">在其当前上下文中的参数特性的集合。</param>
    </member>
    <member name="M:System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)"></member>
    <member name="M:System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)"></member>
  </members>
</doc>